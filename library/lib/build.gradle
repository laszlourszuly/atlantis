plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'org.jetbrains.dokka' version '1.7.10'
}
archivesBaseName = 'atlantis'
version = '4.1.0'
group = 'com.echsylon.atlantis'
repositories {
    mavenCentral()
}
dependencies {
    implementation 'com.squareup.okio:okio:3.2.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    testImplementation 'io.mockk:mockk:1.12.8'
    testImplementation 'org.amshove.kluent:kluent:1.68'
    testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    dokkaHtmlPlugin 'org.jetbrains.dokka:kotlin-as-java-plugin:1.7.10'
}
testlogger {
    theme 'mocha'
    showStandardStreams false
}
jar {
    manifest {
        attributes(
                'Implementation-Title': archivesBaseName,
                'Implementation-Version': archiveVersion,
                'Implementation-Vendor': 'Echsylon Digital Solutions AB'
        )
    }
}
task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from dokkaHtml
}
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}
publishing {
    publications {
        atlantis(MavenPublication) {
            from components.kotlin
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Atlantis'
                packaging = 'jar'
                artifactId = 'atlantis'
                description = 'A mock server implementation for Kotlin.'
                url = 'https://github.com/laszlourszuly/atlantis'
                scm {
                    connection = 'scm:git:git://github.com/laszlourszuly/atlantis.git'
                    developerConnection = 'scm:git:ssh://github.com:laszlourszuly/atlantis.git'
                    url = 'https://github.com/laszlourszuly/atlantis/tree/master'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'László Urszuly'
                        email = 'hello@echsylon.com'
                        organization = 'Echsylon Digital Solutions'
                        organizationUrl = 'https://echsylon.com/'
                    }
                }
            }
            repositories {
                maven {
                    def snapshotRepoUrl = System.getenv('SNAPSHOT')
                    def stagingRepoUrl = System.getenv('STAGING')
                    name = 'Repository'
                    url = version.endsWith('SNAPSHOT') ? snapshotRepoUrl : stagingRepoUrl
                    credentials {
                        username = System.getenv('USERNAME')
                        password = System.getenv('PASSWORD')
                    }
                }
            }
        }
    }
}
signing {
    def signingkey = System.getenv('SIGNINGKEY')
    def passphrase = System.getenv('PASSPHRASE')
    useInMemoryPgpKeys(signingkey, passphrase)
    sign publishing.publications.atlantis
}
